#!/usr/local/bin/php-cgi -q
<?php
/*
 * rc.restore_config_backup
 *
 * part of Firew4LL (https://www.firew4ll.com)
 * Copyright (c) 2020 InSecureNet, SRL (ISN)
 * 
 * forked from pfSense (https://www.pfsense.org)
 * Copyright (c) 2004-2018 Rubicon Communications, LLC (Netgate)
 * All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

require_once('config.inc');

cleanup_backupcache();
$confvers = get_backups();
unset($confvers['versions']);

$fp = fopen('php://stdin', 'r');

function print_backup_info($backup_info, $number) {
	if ($backup_info['time'] != 0) {
		$date = date(gettext("n/j/y H:i:s"), $backup_info['time']);
	} else {
		$date = gettext("Sconosciuto");
	}

	list($page, $reason) = explode(": ", $backup_info['description'], 2);
	if (empty($reason)) {
		$reason = $page;
		$page = gettext("Pagina sconosciuta");
	}

	echo sprintf("%02d", $number) . ". {$date}\tv{$backup_info['version']}\t{$page}\n";
	if ($reason) {
		echo "    {$reason}\n";
	}
}

function list_backups($which="all", $return=false) {
	global $confvers;

	if (count($confvers) == 0) {
		echo gettext("Nessun Backup trovato nella cronologia.");
		return;
	}

	for ($c = count($confvers)-1; $c >= 0; $c--) {
		if (is_numeric($which) && ($c != $which)) {
			continue;
		}
		print_backup_info($confvers[$c], $c+1);
		echo "\n";
	}
}

function choose_backup() {
	global $fp, $confvers;
	if (count($confvers) == 0) {
		echo gettext("Nessun Backup trovato nella cronologia.");
		return -1;
	}
	echo gettext("Quale configurazione vuoi ripristinare?") . "\n";
	echo " 1-" . count($confvers) . " : ";
	$number = strtoupper(chop(fgets($fp)));
	if (is_numeric($number) && ($number > 0) && ($number <= count($confvers))) {
		return $number;
	} else {
		echo gettext("Non Ã¨ un numero di backup valido.\n");
		return -1;
	}
}

function restore_history_backup($number) {
	global $g, $fp, $confvers;
	if (is_numeric($number) && ($number > 0) && ($number <= count($confvers))) {
		$realnumber = $number - 1;
		echo "\n" . gettext("Vuoi ripristinare questo backup?") . "\n";
		list_backups($realnumber);
		$thisbackup = $confvers[$realnumber];
		echo gettext("S/N?") . " : ";
		$confirm = strtoupper(chop(fgets($fp)));
		if ($confirm == gettext("S")) {
			if (config_restore($g['conf_path'] . '/backup/config-' . $thisbackup['time'] . '.xml') == 0) {
				echo "\n";
				echo sprintf(gettext('Configurazione ripristinata con successo al %1$s con descrizione "%2$s".'), date(gettext("n/j/y H:i:s"), $thisbackup['time']), $thisbackup['description']);
				echo "\n" . gettext("Potrebbe essere necessario riavviare il firewall o riavviare i servizi prima che la configurazione ripristinata sia completamente attiva.") . "\n\n";
			} else {
				echo gettext("Impossibile tornare alla configurazione selezionata.") . "\n";
			}
		} else {
			echo gettext("Ripristino annullato.") . "\n";
		}
	} else {
		echo gettext("Ripristino annullato a causa di una scelta non valida.") . "\n";
	}
}

while (true) {

	echo "\n";
	echo gettext("Ripristino del backup dalla cronologia") . "\n\n";
	echo "1) " . gettext("Lista dei Backup disponibili") . "\n";
	echo "2) " . gettext("Ripristina  Backup") . "\n";
	echo "Q) " . gettext("Esci") . "\n";
	echo "\n\n";
	echo gettext("Seleziona un'opzione per continuare") . ": ";

	$command = strtolower(chop(fgets($fp)));

	// Make sure we can detect a foreign language "quit" command.
	if (strtolower($command) == gettext("esci")) {
		$command = "esci";
	}

	switch ($command) {
		case "q":
		case "esci":
		case "quit":
			echo "\n";
			fclose($fp);
			die;
			break;
		case "1":
			list_backups();
			break;
		case "2":
			$number = choose_backup();
			restore_history_backup($number);
			fclose($fp);
			die;
			break;
	}
}

fclose($fp);
die;
?>
