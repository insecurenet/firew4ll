#!/bin/sh
#
# rc.initial
#
# part of Firew4LL (https://www.firew4ll.com)
# Copyright (c) 2020 InSecureNet, SRL (ISN)
# 
# forked from pfSense (https://www.pfsense.org)
# Copyright (c) 2004-2018 Rubicon Communications, LLC (Netgate)
# All rights reserved.
#
# originally based on m0n0wall (http://neon1.net/m0n0wall)
# Copyright (c) 2003-2004 Manuel Kasper <mk@neon1.net>.
# All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# make sure the user can't kill us by pressing Ctrl-C,
# ctrl-z, etc.
trap : 2
trap : 3
trap : 4

if [ -f /etc/rc.local ]; then
	RCLOCALPWD=`ps awux | grep rc.local | grep -v grep | awk '{ print $2 }'`
	if [ "$RCLOCALPWD" = "" ]; then
		echo ">>> Esecuzione rc.local in background..."
		sh /etc/rc.local &
		sleep 1
		sh /etc/rc.local.running &
	else
		if [ -f /etc/rc.local.running ]; then
			echo ">>> Esecuzione rc.local.running in background..."
			sh /etc/rc.local.running &
		fi
	fi
fi

# Parse command line parameters
while [ $# -gt 0 ]; do
	case $1 in
		-c )	shift
			/bin/sh -c $1
			exit
			;;
		* )
	esac
	shift
done

CONFIG="/cf/conf/config.xml"
WORD="https"

# endless loop
while : ; do

if [ -f /tmp/ttybug ]; then
	rm /tmp/ttybug
	exit && exit && logout
fi

/etc/rc.banner

# Read product_name from $g, defaults to Firew4ll
product=$(/usr/local/sbin/read_global_var product_name Firew4ll)

# Check to see if SSH is running.
if pgrep -q -a -F /var/run/sshd.pid sshd >/dev/null 2>&1; then
	sshd_option="14) Disabilita SSH (Secure Shell)";
else
	sshd_option="14) Abilita SSH (Secure Shell)";
fi

# display a cheap menu
echo ""
echo " 0) Logout (solo SSH)                  9) pfTop"
echo " 1) Assegna Interfacce                10) Filtri Log"
echo " 2) Configura indirizzi IP            11) Riavvia webConfigurator"
echo " 3) Reset password webConfigurator    12) PHP shell + strumenti ${product}"
echo " 4) Reset impostazioni di fabbrica    13) Aggiorna da console"
echo " 5) Riavvia il sistema                ${sshd_option}"
echo " 6) Arresta il sistema                15) Ripristina configurazione recente"
echo " 7) Ping host                         16) Riavvia PHP-FPM"
echo " 8) Shell"

echo
read -p "Scegli un'opzione: " opmode
echo

# see what the user has chosen
case ${opmode} in
0)
	exit && exit && logout
	;;
1)
	/etc/rc.initial.setports
	;;
2)
	/etc/rc.initial.setlanip
	;;
3)
	/etc/rc.initial.password
	;;
4)
	/etc/rc.initial.defaults
	;;
5)
	/etc/rc.initial.reboot
	;;
6)
	/etc/rc.initial.halt
	;;
7)
	/etc/rc.initial.ping
	;;
8)
	/bin/tcsh
	;;
9)
	/usr/local/sbin/pftop
	;;
10)
	/usr/local/sbin/clog -f /var/log/filter.log
	;;
11 | 111)
	/etc/rc.restart_webgui
	;;
12)
	/usr/local/sbin/pfSsh.php
	;;
13)
	/bin/sh /usr/local/sbin/${product}-upgrade
	;;
14)
	php -f /etc/rc.initial.toggle_sshd
	;;
15)
	/etc/rc.restore_config_backup
	;;
16)
	/etc/rc.php-fpm_restart
	;;
100)
	if grep "$WORD" "$CONFIG"; then
		links "https://localhost"
	else
		links "http://localhost"
	fi
	;;
"")
	ps -o command='' -c -p $PPID | grep -E '^sshd$' > /dev/null
	if [ $? -eq 0 ]; then
		exit
	else
		kill $PPID ; exit
	fi
	;;
esac

done
